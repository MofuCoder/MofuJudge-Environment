name: CI

on: [push, pull_request]

jobs:
  lint-builder:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # node-version: [10.x, 12.x, 13.x]
        node-version: [12.x]
        # os: [ubuntu-18.04, windows-2019, macOS-10.14]
        os: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
        working-directory: ./tools
      - run: yarn run lint
        working-directory: ./tools

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # node-version: [10.x, 12.x, 13.x]
        node-version: [12.x]
        # os: [ubuntu-18.04, windows-2019, macOS-10.14]
        os: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
        working-directory: ./tools
      - run: yarn run build
        working-directory: ./tools

  release:
    needs: [lint-builder, build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-18.04
    env:
      IMAGE_PREFIX: docker.pkg.github.com/mofucoder/mofujudge-environment/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - run: yarn install --frozen-lockfile
        working-directory: ./tools
      - run: yarn run build
        working-directory: ./tools

      - name: Login to GitHub Packages Docker Registry
        run: echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin docker.pkg.github.com
        env:
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASS: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to GitHub Packages and generate an environment definition file.
        run: yarn run release
        working-directory: ./tools

      - name: Logout from GitHub Packages Docker Registry
        run: docker logout docker.pkg.github.com

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Upload environment definition file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tools/dist/environment.json
          asset_name: environment.json
          asset_content_type: application/json
